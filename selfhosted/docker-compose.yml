version: '3.8'

services:
  nginx:
    image: nginx:1.23.3-alpine
    ports:
      - '8014:80'
    volumes:
      - ./nginx/default_reverseproxy.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - frontend
      - backend
    restart: always
    networks:
      - ddosify

  frontend:
    image: ddosify/selfhosted_frontend:1.2.6
    depends_on:
      - backend
    restart: always
    pull_policy: always
    networks:
      - ddosify

  backend:
    image: ddosify/selfhosted_backend:1.3.3
    depends_on:
      - postgres
      - influxdb
      - redis
      - seaweedfs
    env_file:
      - .env
    networks:
      - ddosify
    restart: always
    pull_policy: always
    command: /workspace/start_scripts/start_app_onprem.sh

  hammermanager:
    ports:
      - "9901:8001"
    image: ddosify/selfhosted_hammermanager:1.2.2
    depends_on:
      - postgres
      - rabbitmq-job
      - rabbitmq-celery
    env_file:
      - .env
    networks:
      - ddosify
    restart: always
    pull_policy: always
    command: /workspace/start_scripts/start_app.sh

  hammermanager-celery-worker:
    image: ddosify/selfhosted_hammermanager:1.2.2
    depends_on:
      - postgres
      - rabbitmq-job
      - rabbitmq-celery
      - hammermanager
    env_file:
      - .env
    networks:
      - ddosify
    restart: always
    pull_policy: always
    command: /workspace/start_scripts/start_celery_worker.sh

  hammermanager-celery-beat:
    image: ddosify/selfhosted_hammermanager:1.2.2
    depends_on:
      - postgres
      - rabbitmq-job
      - rabbitmq-celery
      - hammermanager
    env_file:
      - .env
    networks:
      - ddosify
    restart: always
    pull_policy: always
    command: /workspace/start_scripts/start_celery_beat.sh

  hammer:
    image: ddosify/selfhosted_hammer:1.4.2
    volumes:
      - hammer_id:/root/uuid
    depends_on:
      - rabbitmq-job
      - influxdb
      - hammermanager
      - seaweedfs
    env_file:
      - .env
    networks:
      - ddosify
    restart: always
    pull_policy: always

  hammerdebug:
    image: ddosify/selfhosted_hammer:1.4.2
    volumes:
      - hammerdebug_id:/root/uuid
    depends_on:
      - rabbitmq-job
      - influxdb
      - hammermanager
    env_file:
      - .env
    environment:
      - IS_DEBUG=true
    networks:
      - ddosify
    restart: always
    pull_policy: always

  postgres:
    image: "postgres:13.6"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init_scripts/postgres:/docker-entrypoint-initdb.d
    env_file:
      - .env
    networks:
      - ddosify
    restart: always

  rabbitmq-celery:
    image: "rabbitmq:3.9.4"
    networks:
      - ddosify
    restart: always

  rabbitmq-job:
    ports:
      - "6672:5672"
    image: "rabbitmq:3.9.4"
    networks:
      - ddosify
    restart: always

  influxdb:
    ports:
      - "9086:8086"
    image: "influxdb:2.6.1"
    volumes:
      - influxdb_data:/var/lib/influxdb
      - ./init_scripts/influxdb:/docker-entrypoint-initdb.d
    environment:
      - DOCKER_INFLUXDB_INIT_MODE=setup
      - DOCKER_INFLUXDB_INIT_ORG=ddosify
      - DOCKER_INFLUXDB_INIT_BUCKET=hammerBucket
    env_file:
      - .env
    networks:
      - ddosify
    restart: always

  redis:
    image: "redis:6.2.6"
    volumes:
      - redis_data:/data
    networks:
      - ddosify
    restart: always

  seaweedfs:
    image: chrislusf/seaweedfs:3.51
    ports:
      - "8333:8333"
    command: 'server -s3 -dir="/data"'
    networks:
      - ddosify
    restart: always
    volumes:
      - seaweedfs_data:/data

volumes:
  postgres_data:
  influxdb_data:
  redis_data:
  seaweedfs_data:
  hammer_id:
  hammerdebug_id:

networks:
  ddosify:
