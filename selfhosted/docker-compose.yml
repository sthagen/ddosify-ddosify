version: '3.8'

services:
  nginx:
    image: nginx:1.25.5-alpine
    ports:
      - '8014:80'
    volumes:
      - ./nginx/default_reverseproxy.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - frontend
      - backend
    restart: always
    networks:
      - anteon

  frontend:
    image: ddosify/selfhosted_frontend:4.1.2
    depends_on:
      - backend
    restart: always
    pull_policy: always
    networks:
      - anteon

  backend:
    image: ddosify/selfhosted_backend:3.2.9
    depends_on:
      - postgres
      - influxdb
      - redis-backend
      - seaweedfs
    env_file:
      - .env
    networks:
      - anteon
    restart: always
    pull_policy: always
    command: /workspace/start_scripts/start_app_onprem.sh
    ports:
      - '8008:8008'

  backend-celery-worker:
    image: ddosify/selfhosted_backend:3.2.9
    depends_on:
      - postgres
      - influxdb
      - redis-backend
      - seaweedfs
      - backend
      - rabbitmq
    env_file:
      - .env
    networks:
      - anteon
    restart: always
    pull_policy: always
    command: /workspace/start_scripts/start_celery_worker.sh

  backend-celery-beat:
    image: ddosify/selfhosted_backend:3.2.9
    depends_on:
      - postgres
      - influxdb
      - redis-backend
      - seaweedfs
      - backend
      - rabbitmq
    env_file:
      - .env
    networks:
      - anteon
    restart: always
    pull_policy: always
    command: /workspace/start_scripts/start_celery_beat.sh

  alaz-backend:
    image: ddosify/selfhosted_alaz_backend:2.3.5
    depends_on:
      - postgres
      - influxdb
      - redis-backend
      - backend
    env_file:
      - .env
    networks:
      - anteon
    restart: always
    pull_policy: always
    command: /workspace/start_scripts/start_app_onprem.sh
    ports:
      - '8009:8008'

  alaz-backend-celery-worker-1:
    image: ddosify/selfhosted_alaz_backend:2.3.5
    depends_on:
      - postgres
      - influxdb
      - redis-alaz-backend
      - alaz-backend
      - rabbitmq
      - backend
    env_file:
      - .env
    networks:
      - anteon
    restart: always
    pull_policy: always
    command: /workspace/start_scripts/start_celery_worker.sh

  alaz-backend-celery-worker-2:
    image: ddosify/selfhosted_alaz_backend:2.3.5
    depends_on:
      - postgres
      - influxdb
      - redis-alaz-backend
      - alaz-backend
      - rabbitmq
      - backend
    env_file:
      - .env
    networks:
      - anteon
    restart: always
    pull_policy: always
    command: /workspace/start_scripts/start_celery_worker.sh

  alaz-backend-celery-beat:
    image: ddosify/selfhosted_alaz_backend:2.3.5
    depends_on:
      - postgres
      - influxdb
      - redis-alaz-backend
      - alaz-backend
      - rabbitmq
      - backend
    env_file:
      - .env
    networks:
      - anteon
    restart: always
    pull_policy: always
    command: /workspace/start_scripts/start_celery_beat.sh

  hammermanager:
    ports:
      - "9901:8001"
    image: ddosify/selfhosted_hammermanager:2.0.2
    depends_on:
      - postgres
      - rabbitmq
    env_file:
      - .env
    networks:
      - anteon
    restart: always
    pull_policy: always
    command: /workspace/start_scripts/start_app.sh

  hammermanager-celery-worker:
    image: ddosify/selfhosted_hammermanager:2.0.2
    depends_on:
      - postgres
      - rabbitmq
      - hammermanager
    env_file:
      - .env
    networks:
      - anteon
    restart: always
    pull_policy: always
    command: /workspace/start_scripts/start_celery_worker.sh

  hammermanager-celery-beat:
    image: ddosify/selfhosted_hammermanager:2.0.2
    depends_on:
      - postgres
      - rabbitmq
      - hammermanager
    env_file:
      - .env
    networks:
      - anteon
    restart: always
    pull_policy: always
    command: /workspace/start_scripts/start_celery_beat.sh

  hammer:
    image: ddosify/selfhosted_hammer:2.0.0
    volumes:
      - hammer_id:/root/uuid
    depends_on:
      - rabbitmq
      - influxdb
      - hammermanager
      - seaweedfs
    env_file:
      - .env
    networks:
      - anteon
    restart: always
    pull_policy: always

  hammerdebug:
    image: ddosify/selfhosted_hammer:2.0.0
    volumes:
      - hammerdebug_id:/root/uuid
    depends_on:
      - rabbitmq
      - influxdb
      - hammermanager
    env_file:
      - .env
    environment:
      - IS_DEBUG=true
    networks:
      - anteon
    restart: always
    pull_policy: always

  postgres:
    image: "postgres:16.2-alpine"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init_scripts/postgres:/docker-entrypoint-initdb.d
    env_file:
      - .env
    networks:
      - anteon
    restart: always

  rabbitmq:
    ports:
      - "6672:5672"
    image: "rabbitmq:3.13.1-alpine"
    networks:
      - anteon
    restart: always

  influxdb:
    ports:
      - "9086:8086"
    image: "influxdb:2.6.1-alpine"
    volumes:
      - influxdb_data:/var/lib/influxdb
      - ./init_scripts/influxdb:/docker-entrypoint-initdb.d
    environment:
      - DOCKER_INFLUXDB_INIT_MODE=setup
      - DOCKER_INFLUXDB_INIT_ORG=ddosify
      - DOCKER_INFLUXDB_INIT_BUCKET=hammerBucket
    env_file:
      - .env
    networks:
      - anteon
    restart: always

  redis-backend:
    image: "redis:7.2.4-alpine"
    volumes:
      - redis_backend_data:/data
    networks:
      - anteon
    restart: always

  redis-alaz-backend:
    image: "redis:7.2.4-alpine"
    volumes:
      - redis_alaz_backend_data:/data
    networks:
      - anteon
    restart: always

  seaweedfs:
    image: chrislusf/seaweedfs:3.64
    ports:
      - "8333:8333"
    command: 'server -s3 -dir="/data"'
    networks:
      - anteon
    restart: always
    volumes:
      - seaweedfs_data:/data

  prometheus:
    image: prom/prometheus:v2.37.9
    ports:
      - "9090:9090"
    command: --config.file=/prometheus/prometheus.yml --storage.tsdb.path=/prometheus --web.console.libraries=/usr/share/prometheus/console_libraries --web.console.templates=/usr/share/prometheus/consoles --storage.tsdb.retention=10d
    volumes:
      - ./init_scripts/prometheus/prometheus.yml:/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    networks:
      - anteon
    restart: always

volumes:
  postgres_data:
  influxdb_data:
  redis_backend_data:
  redis_alaz_backend_data:
  seaweedfs_data:
  hammer_id:
  hammerdebug_id:
  prometheus_data:

networks:
  anteon:
